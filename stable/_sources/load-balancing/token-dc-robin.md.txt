# Token aware DC Aware Round robin

This policy will try to calculate a token to find replica nodes in which queried data is stored.\
After finding the replicas it chooses the ones from the local datacenter and performs a round robin on them.

### Example
To use this policy in `Session`:
```rust
use scylla::{Session, SessionBuilder};
use scylla::transport::load_balancing::{DcAwareRoundRobinPolicy, TokenAwarePolicy};
use scylla::transport::ExecutionProfile;
use std::sync::Arc;

let local_dc: String = "us_east".to_string();
let dc_robin = Box::new(DcAwareRoundRobinPolicy::new(local_dc));
let policy = Arc::new(TokenAwarePolicy::new(dc_robin));

let handle = ExecutionProfile::builder()
    .load_balancing_policy(policy)
    .build()
    .into_handle();

let session: Session = SessionBuilder::new()
    .known_node("127.0.0.1:9042")
    .default_execution_profile_handle(handle)
    .build()
    .await?;
```
